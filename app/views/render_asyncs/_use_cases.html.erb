<h2>jQuery: <script>document.write(window.jQuery)</script></h2>

<hr></hr>

<section>
  <h3>Simple request that waves:</h3>
  <%= render_async wave_render_async_path,
                   container_id: 'ay',
                   container_class: 'ayay',
                   error_message: "NOOOO" do %>
    ...Loading <%= wave_render_async_path %>
  <% end %>
</section>

<hr></hr>
<section>
  <h3>Bump:</h3>
  <%= render_async bump_render_async_path,
                   method: 'POST',
                   data: { fresh: 'AF' },
                   headers: { 'Content-Type': 'text' } do %>
    ...Loading <%= bump_render_async_path %>
  <% end %>
</section>

<hr></hr>
<section>
  <h3>Event dispatching:</h3>

  <script>
    document.addEventListener('ay', function() {
      var p = document.getElementById('event-paragraph');
      p.innerHTML = 'Event dispatched!';
    });
  </script>

  <%= render_async wave_render_async_path, event_name: 'ay' do %>
    ...Loading <%= wave_render_async_path %>
  <% end %>
  <p id="event-paragraph"></p>
</section>

<hr></hr>
<section>
  <h3>Error message:</h3>

  <script>
    document.addEventListener('error-event', function() {
      var p = document.getElementById('error-event-paragraph');
      p.innerHTML = 'Error event dispatched!';
    });
  </script>

  <%= render_async error_render_async_path,
                   error_message: '<p>Sorry for the error :(</p>',
                   error_event_name: 'error-event' do %>
    ...Loading <%= error_render_async_path %>
  <% end %>
  <p id="error-event-paragraph"></p>
</section>

<hr></hr>
<section>
  <h3>Nested partial:</h3>

  <%= render_async nested_render_async_path do %>
    ...Loading <%= nested_render_async_path %>
  <% end %>
</section>

<hr></hr>
<section>
  <div id="toggle-feature">
    <h3>Bump:</h3>
    <%= render_async bump_render_async_path,
      method: 'POST',
      data: { fresh: 'AF' },
      headers: { 'Content-Type': 'text' },
      interval: 2000,
      toggle: { selector: '#toggle-poll' } do %>
      ...Click to load <%= bump_render_async_path %> path
    <% end %>

    <button id='toggle-poll'>Toggle poll</button>
  </div>
</section>

<hr></hr>
<section>
  <div id="toggle-feature-with-link">
    <h3>Toggle wave:</h3>
    <%= render_async wave_render_async_path,
      toggle: { selector: '#load-wave' } do %>
      <a href='#' id='load-wave'>Load a wave</a>
    <% end %>
  </div>
</section>

<hr></hr>
<section>
  <div id="toggle-feature-with-event-trigger">
    <h3>Controllable interval:</h3>

    <%= render_async wave_render_async_path, container_id: 'controllable-interval', interval: 3000 %>

    <button id='stop-polling'>Stop polling</button>
    <button id='start-polling'>Start polling</button>

    <script>
      var container = document.getElementById('controllable-interval')
      var stopPolling = document.getElementById('stop-polling')
      var startPolling = document.getElementById('start-polling')

      var triggerEventOnContainer = function(eventName) {
        var event = new Event(eventName);

        container.dispatchEvent(event)
      }

      stopPolling.addEventListener('click', function() {
        container.innerHTML = '<p>Polling stopped</p>'
        triggerEventOnContainer('async-stop')
      })
      startPolling.addEventListener('click', function() {
        triggerEventOnContainer('async-start')
      })
    </script>
  </div>
</section>

<hr></hr>
<section>
  <div id="check-default-event-dispatching">
    <h3>Default event dispatching:</h3>

    <p id="render-async-ok">
      If it loads successfully, this should change.
    </p>

    <p id="render-async-fail">
      If it loads badly, this should change.
    </p>

    <%= render_async wave_render_async_path %>
    <%= render_async error_render_async_path %>

    <script>
      document.addEventListener('render_async_load', function(event) {
        var p = document.getElementById('render-async-ok');
        p.innerHTML = 'It loaded OK!';
      });
      document.addEventListener('render_async_error', function(event) {
        var p = document.getElementById('render-async-fail');
        p.innerHTML = 'It loaded badly :(!';
      });
    </script>
  </div>
</section>
